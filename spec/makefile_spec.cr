require "./spec_helper"

describe Sam::Makefile do
  makefile = Sam::Makefile.new("src/sam.cr")

  describe "#generate" do
    declaration_part = <<-FILE
      # === Sam shortcut
      # The following lines are autogenerated and any changes will be
      # discarded if Sam regenerates this file.
      CRYSTAL_BIN = crystal
      CRYSTAL_PATH := $(if \
        $(shell command -v $(CRYSTAL_BIN) 2>/dev/null),\
          $(shell command -v $(CRYSTAL_BIN) 2>/dev/null),\
        $(error '`$(CRYSTAL_BIN)` not found, please install it and/or ensure \
        it is in your PATH'))
      SAM_PATH ?= "src/sam.cr"
      .PHONY: sam
      sam:
      \t$(CRYSTAL_PATH) $(SAM_PATH) $(filter-out $@,$(MAKECMDGOALS))
      %:
      \t@:
      # === Sam shortcut\n
      FILE
    makefile_path = "Makefile"

    it "creates new makefile" do
      begin
        File.exists?(makefile_path).should eq(false)
        makefile.generate
        File.read(makefile_path).should eq(declaration_part)
      ensure
        File.delete(makefile_path) if File.exists?(makefile_path)
      end
    end

    it "correctly regenerates existing file" do
      begin
        File.exists?(makefile_path).should eq(false)
        File.write(makefile_path, "# before\n" + declaration_part + "# after\n")
        makefile.generate
        File.read(makefile_path).should eq("# before\n# after\n" + declaration_part)
      ensure
        File.delete(makefile_path) if File.exists?(makefile_path)
      end
    end
  end
end
